name: Build

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Build
        env:
          RUSTFLAGS: "-D warnings"
        run: cargo build

      - name: Build All Features
        env:
          RUSTFLAGS: "-D warnings"
        run: cargo build --all-features

      - name: Check Format
        run: cargo fmt --all -- --check

      - name: Run Clippy
        timeout-minutes: 60
        run: cargo clippy --all-targets --all-features -j 4 -- -D warnings

      - name: Run Test
        run: cargo llvm-cov test --no-report

      - name: Check core mainnet config
        run: target/debug/mystiko_config_uploader validate config/core/mainnet/config.json

      - name: Check core testnet config
        run: target/debug/mystiko_config_uploader validate config/core/testnet/config.json

      - name: Check relayer mainnet config
        run: target/debug/mystiko_config_uploader validate config/relayer/mainnet/config.json --type relayer

      - name: Check relayer testnet config
        run: target/debug/mystiko_config_uploader validate config/relayer/testnet/config.json --type relayer

      - name: Check Dirty Files
        run: git diff --quiet || (echo "some generated files are not included in repo" && exit 1)

      - name: Generate Coverage
        run: cargo llvm-cov report --lcov --output-path=lcov.info --ignore-filename-regex="mystiko_(relayer_abi|config_uploader)"

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@master
        if: failure()
        with:
          message: ‚ùó Build failed for [${{ github.repository }}](https://github.com/${{ github.repository }}/actions) because of ${{ github.actor }}
          format: markdown
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      - name: Telegram Success Notification
        uses: appleboy/telegram-action@master
        if: success()
        with:
          message: Build succeeded for [${{ github.repository }}](https://github.com/${{ github.repository }}/actions)
          format: markdown
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
